/*
Tên file: 11_feature_source_tables_data.sql
Mô tả: Nhập dữ liệu mẫu cho bảng FEATURE_SOURCE_TABLES
Tác giả: Nguyễn Ngọc Bình
Ngày tạo: 2025-05-18
Phiên bản: 1.0
*/

-- Xóa dữ liệu cũ nếu cần
-- DELETE FROM MODEL_REGISTRY.dbo.FEATURE_SOURCE_TABLES;

-- Lấy các FEATURE_ID để tham chiếu
DECLARE @CUST_AGE_ID INT;
DECLARE @INCOME_ID INT;
DECLARE @CUST_TENURE_ID INT;
DECLARE @UTIL_RATIO_ID INT;
DECLARE @DPD_30_L12M_ID INT;
DECLARE @MAX_DPD_L12M_ID INT;
DECLARE @BUREAU_SCORE_ID INT;
DECLARE @DTI_ID INT;
DECLARE @LTV_ID INT;
DECLARE @BAL_GROWTH_ID INT;
DECLARE @AVG_BAL_L3M_ID INT;
DECLARE @CASH_ADV_RATIO_ID INT;

SELECT @CUST_AGE_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'CUST_AGE';
SELECT @INCOME_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'INCOME';
SELECT @CUST_TENURE_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'CUST_TENURE';
SELECT @UTIL_RATIO_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'UTIL_RATIO';
SELECT @DPD_30_L12M_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'DPD_30_L12M';
SELECT @MAX_DPD_L12M_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'MAX_DPD_L12M';
SELECT @BUREAU_SCORE_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'BUREAU_SCORE';
SELECT @DTI_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'DTI';
SELECT @LTV_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'LTV';
SELECT @BAL_GROWTH_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'BAL_GROWTH';
SELECT @AVG_BAL_L3M_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'AVG_BAL_L3M';
SELECT @CASH_ADV_RATIO_ID = FEATURE_ID FROM MODEL_REGISTRY.dbo.FEATURE_REGISTRY WHERE FEATURE_CODE = 'CASH_ADV_RATIO';

-- Lấy các SOURCE_TABLE_ID để tham chiếu
DECLARE @DIM_CUSTOMER_ID INT;
DECLARE @DIM_ACCOUNT_ID INT;
DECLARE @FACT_ACCOUNT_BALANCE_ID INT;
DECLARE @FACT_TRANSACTION_ID INT;
DECLARE @FACT_PAYMENT_HISTORY_ID INT;
DECLARE @FACT_DELINQUENCY_ID INT;
DECLARE @FACT_CREDIT_BUREAU_ID INT;
DECLARE @PD_RETAIL_FEATURES_ID INT;
DECLARE @BSCORE_CARDS_RESULTS_ID INT;

SELECT @DIM_CUSTOMER_ID = SOURCE_TABLE_ID FROM MODEL_REGISTRY.dbo.MODEL_SOURCE_TABLES WHERE SOURCE_TABLE_NAME = 'DIM_CUSTOMER';
SELECT @DIM_ACCOUNT_ID = SOURCE_TABLE_ID FROM MODEL_REGISTRY.dbo.MODEL_SOURCE_TABLES WHERE SOURCE_TABLE_NAME = 'DIM_ACCOUNT';
SELECT @FACT_ACCOUNT_BALANCE_ID = SOURCE_TABLE_ID FROM MODEL_REGISTRY.dbo.MODEL_SOURCE_TABLES WHERE SOURCE_TABLE_NAME = 'FACT_ACCOUNT_BALANCE';
SELECT @FACT_TRANSACTION_ID = SOURCE_TABLE_ID FROM MODEL_REGISTRY.dbo.MODEL_SOURCE_TABLES WHERE SOURCE_TABLE_NAME = 'FACT_TRANSACTION';
SELECT @FACT_PAYMENT_HISTORY_ID = SOURCE_TABLE_ID FROM MODEL_REGISTRY.dbo.MODEL_SOURCE_TABLES WHERE SOURCE_TABLE_NAME = 'FACT_PAYMENT_HISTORY';
SELECT @FACT_DELINQUENCY_ID = SOURCE_TABLE_ID FROM MODEL_REGISTRY.dbo.MODEL_SOURCE_TABLES WHERE SOURCE_TABLE_NAME = 'FACT_DELINQUENCY';
SELECT @FACT_CREDIT_BUREAU_ID = SOURCE_TABLE_ID FROM MODEL_REGISTRY.dbo.MODEL_SOURCE_TABLES WHERE SOURCE_TABLE_NAME = 'FACT_CREDIT_BUREAU';
SELECT @PD_RETAIL_FEATURES_ID = SOURCE_TABLE_ID FROM MODEL_REGISTRY.dbo.MODEL_SOURCE_TABLES WHERE SOURCE_TABLE_NAME = 'PD_RETAIL_FEATURES';
SELECT @BSCORE_CARDS_RESULTS_ID = SOURCE_TABLE_ID FROM MODEL_REGISTRY.dbo.MODEL_SOURCE_TABLES WHERE SOURCE_TABLE_NAME = 'BSCORE_CARDS_RESULTS';

-- Nhập dữ liệu vào bảng FEATURE_SOURCE_TABLES
INSERT INTO MODEL_REGISTRY.dbo.FEATURE_SOURCE_TABLES (
    FEATURE_ID,
    SOURCE_TABLE_ID,
    SOURCE_COLUMN_NAME,
    COLUMN_ALIAS,
    SQL_SNIPPET,
    JOIN_CONDITIONS,
    FILTERS_APPLIED,
    IS_PRIMARY_SOURCE,
    DATA_FRESHNESS_REQ,
    JOINS_REQUIRED,
    PRIORITY,
    IS_ACTIVE
)
VALUES 
-- Mapping for CUST_AGE (Customer Age)
(@CUST_AGE_ID, @DIM_CUSTOMER_ID, 'DATE_OF_BIRTH', 'BIRTH_DATE', 
 'DATEDIFF(YEAR, DATE_OF_BIRTH, CURRENT_TIMESTAMP)', 
 NULL, 
 NULL, 
 1, 
 'MONTHLY', 
 NULL, 
 1, 
 1),

(@CUST_AGE_ID, @PD_RETAIL_FEATURES_ID, 'CUSTOMER_AGE', 'AGE', 
 'CUSTOMER_AGE', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1),

-- Mapping for INCOME
(@INCOME_ID, @DIM_CUSTOMER_ID, 'INCOME', 'MONTHLY_INCOME', 
 'INCOME', 
 NULL, 
 'INCOME IS NOT NULL AND INCOME > 0', 
 1, 
 'QUARTERLY', 
 NULL, 
 1, 
 1),

(@INCOME_ID, @PD_RETAIL_FEATURES_ID, 'INCOME_CATEGORY', 'INCOME_LEVEL', 
 'INCOME_CATEGORY', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1),

-- Mapping for CUSTOMER_TENURE
(@CUST_TENURE_ID, @DIM_CUSTOMER_ID, 'REGISTRATION_DATE', 'REG_DATE', 
 'DATEDIFF(MONTH, REGISTRATION_DATE, CURRENT_TIMESTAMP)', 
 NULL, 
 'REGISTRATION_DATE IS NOT NULL', 
 1, 
 'MONTHLY', 
 NULL, 
 1, 
 1),

(@CUST_TENURE_ID, @PD_RETAIL_FEATURES_ID, 'CUSTOMER_TENURE', 'TENURE_MONTHS', 
 'CUSTOMER_TENURE', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1),

-- Mapping for UTIL_RATIO
(@UTIL_RATIO_ID, @FACT_ACCOUNT_BALANCE_ID, 'CURRENT_BALANCE', 'BALANCE', 
 'CASE WHEN CREDIT_LIMIT > 0 THEN ABS(CURRENT_BALANCE) / CREDIT_LIMIT ELSE NULL END',
 'INNER JOIN DIM_ACCOUNT ON FACT_ACCOUNT_BALANCE.ACCOUNT_ID = DIM_ACCOUNT.ACCOUNT_ID', 
 'DIM_ACCOUNT.ACCOUNT_TYPE IN (''CREDIT_CARD'', ''LINE_OF_CREDIT'')', 
 1, 
 'DAILY', 
 N'["DIM_ACCOUNT"]', 
 1, 
 1),

(@UTIL_RATIO_ID, @PD_RETAIL_FEATURES_ID, 'UTILIZATION_RATIO', 'UTIL', 
 'UTILIZATION_RATIO', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1),

-- Mapping for DPD_30_L12M
(@DPD_30_L12M_ID, @FACT_DELINQUENCY_ID, 'DAYS_PAST_DUE', 'DPD', 
 'SUM(CASE WHEN DAYS_PAST_DUE >= 30 THEN 1 ELSE 0 END) OVER (PARTITION BY ACCOUNT_ID ORDER BY DELINQUENCY_DATE ROWS BETWEEN 365 PRECEDING AND CURRENT ROW)',
 NULL, 
 'DELINQUENCY_DATE >= DATEADD(YEAR, -1, CURRENT_TIMESTAMP)', 
 1, 
 'DAILY', 
 NULL, 
 1, 
 1),

(@DPD_30_L12M_ID, @PD_RETAIL_FEATURES_ID, 'DPD_LAST_12M', 'DPD_30_COUNT', 
 'DPD_LAST_12M', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1),

-- Mapping for MAX_DPD_L12M
(@MAX_DPD_L12M_ID, @FACT_DELINQUENCY_ID, 'DAYS_PAST_DUE', 'MAX_DPD', 
 'MAX(DAYS_PAST_DUE) OVER (PARTITION BY ACCOUNT_ID ORDER BY DELINQUENCY_DATE ROWS BETWEEN 365 PRECEDING AND CURRENT ROW)',
 NULL, 
 'DELINQUENCY_DATE >= DATEADD(YEAR, -1, CURRENT_TIMESTAMP)', 
 1, 
 'DAILY', 
 NULL, 
 1, 
 1),

(@MAX_DPD_L12M_ID, @PD_RETAIL_FEATURES_ID, 'MAX_DPD_LAST_12M', 'MAX_DAYS_PAST_DUE', 
 'MAX_DPD_LAST_12M', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1),

-- Mapping for BUREAU_SCORE
(@BUREAU_SCORE_ID, @FACT_CREDIT_BUREAU_ID, 'BUREAU_SCORE', 'CREDIT_SCORE', 
 'BUREAU_SCORE', 
 NULL, 
 'BUREAU_SCORE BETWEEN 300 AND 900', 
 1, 
 'MONTHLY', 
 NULL, 
 1, 
 1),

(@BUREAU_SCORE_ID, @PD_RETAIL_FEATURES_ID, 'BUREAU_SCORE', 'CREDIT_SCORE', 
 'BUREAU_SCORE', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1),

-- Mapping for DTI (Debt to Income Ratio)
(@DTI_ID, @PD_RETAIL_FEATURES_ID, 'DEBT_TO_INCOME', 'DTI_RATIO', 
 'DEBT_TO_INCOME', 
 NULL, 
 NULL, 
 1, 
 'MONTHLY', 
 NULL, 
 1, 
 1),

-- Mapping for LTV (Loan to Value Ratio)
(@LTV_ID, @DIM_ACCOUNT_ID, 'LOAN_AMOUNT', 'LOAN_AMT', 
 'CASE WHEN COLLATERAL_VALUE > 0 THEN LOAN_AMOUNT / COLLATERAL_VALUE ELSE NULL END',
 NULL, 
 'ACCOUNT_TYPE = ''MORTGAGE'' AND COLLATERAL_VALUE > 0', 
 1, 
 'MONTHLY', 
 NULL, 
 1, 
 1),

-- Mapping for BALANCE_GROWTH_RATE
(@BAL_GROWTH_ID, @FACT_ACCOUNT_BALANCE_ID, 'CURRENT_BALANCE', 'BALANCE', 
 'CASE 
    WHEN LAG(ABS(CURRENT_BALANCE), 180) OVER (PARTITION BY ACCOUNT_ID ORDER BY BALANCE_DATE) > 0 
    THEN (ABS(CURRENT_BALANCE) - LAG(ABS(CURRENT_BALANCE), 180) OVER (PARTITION BY ACCOUNT_ID ORDER BY BALANCE_DATE)) / 
         LAG(ABS(CURRENT_BALANCE), 180) OVER (PARTITION BY ACCOUNT_ID ORDER BY BALANCE_DATE)
    ELSE NULL 
  END',
 NULL, 
 NULL, 
 1, 
 'MONTHLY', 
 NULL, 
 1, 
 1),

(@BAL_GROWTH_ID, @PD_RETAIL_FEATURES_ID, 'BALANCE_GROWTH_RATE', 'GROWTH_RATE', 
 'BALANCE_GROWTH_RATE', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1),

-- Mapping for AVG_BALANCE_L3M
(@AVG_BAL_L3M_ID, @FACT_ACCOUNT_BALANCE_ID, 'CURRENT_BALANCE', 'BALANCE', 
 'AVG(CURRENT_BALANCE) OVER (PARTITION BY ACCOUNT_ID ORDER BY BALANCE_DATE ROWS BETWEEN 90 PRECEDING AND CURRENT ROW)',
 NULL, 
 'BALANCE_DATE >= DATEADD(MONTH, -3, CURRENT_TIMESTAMP)', 
 1, 
 'DAILY', 
 NULL, 
 1, 
 1),

(@AVG_BAL_L3M_ID, @PD_RETAIL_FEATURES_ID, 'AVG_BALANCE_L3M', 'AVG_BAL', 
 'AVG_BALANCE_L3M', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1),

-- Mapping for CASH_ADVANCE_RATIO
(@CASH_ADV_RATIO_ID, @FACT_TRANSACTION_ID, 'TRANSACTION_AMOUNT', 'CASH_ADV_AMOUNT', 
 'SUM(CASE WHEN TRANSACTION_TYPE = ''CASH_ADVANCE'' THEN TRANSACTION_AMOUNT ELSE 0 END) / NULLIF(SUM(TRANSACTION_AMOUNT), 0)',
 'INNER JOIN DIM_ACCOUNT ON FACT_TRANSACTION.ACCOUNT_ID = DIM_ACCOUNT.ACCOUNT_ID', 
 'DIM_ACCOUNT.ACCOUNT_TYPE = ''CREDIT_CARD'' AND TRANSACTION_DATE >= DATEADD(MONTH, -3, CURRENT_TIMESTAMP)', 
 1, 
 'MONTHLY', 
 N'["DIM_ACCOUNT"]', 
 1, 
 1),

(@CASH_ADV_RATIO_ID, @PD_RETAIL_FEATURES_ID, 'CASH_ADVANCE_RATIO', 'CASH_ADV_RATIO', 
 'CASH_ADVANCE_RATIO', 
 NULL, 
 NULL, 
 0, 
 'DAILY', 
 NULL, 
 2, 
 1);
GO

PRINT N'Đã nhập dữ liệu mẫu cho bảng FEATURE_SOURCE_TABLES thành công.';
GO