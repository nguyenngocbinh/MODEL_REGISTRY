/*
Tên file: model_performance_report.sql
Mô tả: Báo cáo hiệu suất của các mô hình theo thời gian
Tác giả: Nguyễn Ngọc Bình
Ngày tạo: 2025-05-12
Phiên bản: 1.0

Báo cáo này cung cấp thông tin chi tiết về hiệu suất của các mô hình theo thời gian,
bao gồm các chỉ số đánh giá, xu hướng hiệu suất, và cảnh báo về sự suy giảm hiệu suất.
*/

-- 1. Báo cáo tổng quan về hiệu suất mô hình
SELECT 
    'BÁO CÁO HIỆU SUẤT MÔ HÌNH - ' + CONVERT(VARCHAR, GETDATE(), 103) AS REPORT_TITLE;

-- 1.1. Thống kê tổng quan về hiệu suất của tất cả các mô hình
SELECT 
    'THỐNG KÊ TỔNG QUAN VỀ HIỆU SUẤT MÔ HÌNH' AS SECTION_TITLE;

WITH LatestValidation AS (
    SELECT 
        mr.MODEL_ID,
        mvr.VALIDATION_ID,
        mvr.VALIDATION_DATE,
        ROW_NUMBER() OVER (PARTITION BY mr.MODEL_ID ORDER BY mvr.VALIDATION_DATE DESC) AS RowNum
    FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
    JOIN MODEL_REGISTRY.dbo.MODEL_VALIDATION_RESULTS mvr ON mr.MODEL_ID = mvr.MODEL_ID
    WHERE mr.IS_ACTIVE = 1
    AND GETDATE() BETWEEN mr.EFF_DATE AND mr.EXP_DATE
)
SELECT 
    COUNT(DISTINCT mr.MODEL_ID) AS TONG_SO_MO_HINH,
    SUM(CASE WHEN vp.OVERALL_RATING = 'GREEN' THEN 1 ELSE 0 END) AS HIEU_SUAT_TOT,
    SUM(CASE WHEN vp.OVERALL_RATING = 'AMBER' THEN 1 ELSE 0 END) AS HIEU_SUAT_CANH_BAO,
    SUM(CASE WHEN vp.OVERALL_RATING = 'RED' THEN 1 ELSE 0 END) AS HIEU_SUAT_KEM,
    CAST(100.0 * SUM(CASE WHEN vp.OVERALL_RATING = 'GREEN' THEN 1 ELSE 0 END) / COUNT(DISTINCT mr.MODEL_ID) AS DECIMAL(5,2)) AS TY_LE_HIEU_SUAT_TOT,
    AVG(vp.GINI) AS GINI_TRUNG_BINH,
    AVG(vp.KS_STATISTIC) AS KS_TRUNG_BINH,
    AVG(vp.PSI) AS PSI_TRUNG_BINH,
    MIN(vp.VALIDATION_DATE) AS NGAY_DANH_GIA_CU_NHAT,
    MAX(vp.VALIDATION_DATE) AS NGAY_DANH_GIA_MOI_NHAT
FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
JOIN LatestValidation lv ON mr.MODEL_ID = lv.MODEL_ID AND lv.RowNum = 1
JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp ON lv.VALIDATION_ID = vp.VALIDATION_ID;

-- 1.2. Thống kê hiệu suất theo loại mô hình
SELECT 
    'THỐNG KÊ HIỆU SUẤT THEO LOẠI MÔ HÌNH' AS SECTION_TITLE;

WITH LatestValidation AS (
    SELECT 
        mr.MODEL_ID,
        mr.TYPE_ID,
        mvr.VALIDATION_ID,
        mvr.VALIDATION_DATE,
        ROW_NUMBER() OVER (PARTITION BY mr.MODEL_ID ORDER BY mvr.VALIDATION_DATE DESC) AS RowNum
    FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
    JOIN MODEL_REGISTRY.dbo.MODEL_VALIDATION_RESULTS mvr ON mr.MODEL_ID = mvr.MODEL_ID
    WHERE mr.IS_ACTIVE = 1
    AND GETDATE() BETWEEN mr.EFF_DATE AND mr.EXP_DATE
)
SELECT 
    mt.TYPE_NAME AS LOAI_MO_HINH,
    COUNT(DISTINCT mr.MODEL_ID) AS SO_LUONG_MO_HINH,
    SUM(CASE WHEN vp.OVERALL_RATING = 'GREEN' THEN 1 ELSE 0 END) AS HIEU_SUAT_TOT,
    SUM(CASE WHEN vp.OVERALL_RATING = 'AMBER' THEN 1 ELSE 0 END) AS HIEU_SUAT_CANH_BAO,
    SUM(CASE WHEN vp.OVERALL_RATING = 'RED' THEN 1 ELSE 0 END) AS HIEU_SUAT_KEM,
    CAST(100.0 * SUM(CASE WHEN vp.OVERALL_RATING = 'GREEN' THEN 1 ELSE 0 END) / COUNT(DISTINCT mr.MODEL_ID) AS DECIMAL(5,2)) AS TY_LE_HIEU_SUAT_TOT,
    AVG(vp.GINI) AS GINI_TRUNG_BINH,
    AVG(vp.KS_STATISTIC) AS KS_TRUNG_BINH,
    AVG(vp.PSI) AS PSI_TRUNG_BINH
FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
JOIN MODEL_REGISTRY.dbo.MODEL_TYPE mt ON mr.TYPE_ID = mt.TYPE_ID
JOIN LatestValidation lv ON mr.MODEL_ID = lv.MODEL_ID AND lv.RowNum = 1
JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp ON lv.VALIDATION_ID = vp.VALIDATION_ID
GROUP BY mt.TYPE_NAME
ORDER BY SO_LUONG_MO_HINH DESC;

-- 1.3. Thống kê hiệu suất theo phân khúc mô hình
SELECT 
    'THỐNG KÊ HIỆU SUẤT THEO PHÂN KHÚC MÔ HÌNH' AS SECTION_TITLE;

WITH LatestValidation AS (
    SELECT 
        mr.MODEL_ID,
        mr.MODEL_CATEGORY,
        mvr.VALIDATION_ID,
        mvr.VALIDATION_DATE,
        ROW_NUMBER() OVER (PARTITION BY mr.MODEL_ID ORDER BY mvr.VALIDATION_DATE DESC) AS RowNum
    FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
    JOIN MODEL_REGISTRY.dbo.MODEL_VALIDATION_RESULTS mvr ON mr.MODEL_ID = mvr.MODEL_ID
    WHERE mr.IS_ACTIVE = 1
    AND GETDATE() BETWEEN mr.EFF_DATE AND mr.EXP_DATE
)
SELECT 
    ISNULL(lv.MODEL_CATEGORY, 'Không phân loại') AS PHAN_KHUC,
    COUNT(DISTINCT mr.MODEL_ID) AS SO_LUONG_MO_HINH,
    SUM(CASE WHEN vp.OVERALL_RATING = 'GREEN' THEN 1 ELSE 0 END) AS HIEU_SUAT_TOT,
    SUM(CASE WHEN vp.OVERALL_RATING = 'AMBER' THEN 1 ELSE 0 END) AS HIEU_SUAT_CANH_BAO,
    SUM(CASE WHEN vp.OVERALL_RATING = 'RED' THEN 1 ELSE 0 END) AS HIEU_SUAT_KEM,
    CAST(100.0 * SUM(CASE WHEN vp.OVERALL_RATING = 'GREEN' THEN 1 ELSE 0 END) / COUNT(DISTINCT mr.MODEL_ID) AS DECIMAL(5,2)) AS TY_LE_HIEU_SUAT_TOT,
    AVG(vp.GINI) AS GINI_TRUNG_BINH,
    AVG(vp.KS_STATISTIC) AS KS_TRUNG_BINH,
    AVG(vp.PSI) AS PSI_TRUNG_BINH
FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
JOIN LatestValidation lv ON mr.MODEL_ID = lv.MODEL_ID AND lv.RowNum = 1
JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp ON lv.VALIDATION_ID = vp.VALIDATION_ID
GROUP BY lv.MODEL_CATEGORY
ORDER BY SO_LUONG_MO_HINH DESC;

-- 2. Báo cáo chi tiết hiệu suất các mô hình
SELECT 
    'CHI TIẾT HIỆU SUẤT CÁC MÔ HÌNH' AS SECTION_TITLE;

-- 2.1. Danh sách các mô hình và hiệu suất mới nhất
WITH LatestValidation AS (
    SELECT 
        mr.MODEL_ID,
        mvr.VALIDATION_ID,
        mvr.VALIDATION_DATE,
        ROW_NUMBER() OVER (PARTITION BY mr.MODEL_ID ORDER BY mvr.VALIDATION_DATE DESC) AS RowNum
    FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
    JOIN MODEL_REGISTRY.dbo.MODEL_VALIDATION_RESULTS mvr ON mr.MODEL_ID = mvr.MODEL_ID
    WHERE mr.IS_ACTIVE = 1
    AND GETDATE() BETWEEN mr.EFF_DATE AND mr.EXP_DATE
)
SELECT 
    mr.MODEL_ID,
    mr.MODEL_NAME AS TEN_MO_HINH,
    mr.MODEL_VERSION AS PHIEN_BAN,
    mt.TYPE_NAME AS LOAI_MO_HINH,
    mr.MODEL_CATEGORY AS PHAN_KHUC,
    CONVERT(VARCHAR, vp.VALIDATION_DATE, 103) AS NGAY_DANH_GIA,
    vp.VALIDATION_TYPE AS LOAI_DANH_GIA,
    vp.GINI,
    vp.GINI_RATING AS DANH_GIA_GINI,
    vp.KS_STATISTIC AS KS,
    vp.KS_RATING AS DANH_GIA_KS,
    vp.PSI,
    vp.PSI_RATING AS DANH_GIA_PSI,
    vp.ACCURACY AS DO_CHINH_XAC,
    vp.OVERALL_RATING AS DANH_GIA_TONG_THE,
    DATEDIFF(DAY, vp.VALIDATION_DATE, GETDATE()) AS SO_NGAY_TU_LAN_DANH_GIA_CUOI
FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
JOIN MODEL_REGISTRY.dbo.MODEL_TYPE mt ON mr.TYPE_ID = mt.TYPE_ID
JOIN LatestValidation lv ON mr.MODEL_ID = lv.MODEL_ID AND lv.RowNum = 1
JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp ON lv.VALIDATION_ID = vp.VALIDATION_ID
ORDER BY 
    CASE vp.OVERALL_RATING
        WHEN 'RED' THEN 1
        WHEN 'AMBER' THEN 2
        WHEN 'GREEN' THEN 3
        ELSE 4
    END,
    SO_NGAY_TU_LAN_DANH_GIA_CUOI;

-- 2.2. Mô hình có hiệu suất suy giảm (so với lần đánh giá trước)
SELECT 
    'MÔ HÌNH CÓ HIỆU SUẤT SUY GIẢM' AS SECTION_TITLE;

WITH PerfComparison AS (
    SELECT 
        mr.MODEL_ID,
        mr.MODEL_NAME,
        mr.MODEL_VERSION,
        mt.TYPE_NAME,
        vp1.VALIDATION_DATE AS LATEST_DATE,
        vp1.GINI AS LATEST_GINI,
        vp1.KS_STATISTIC AS LATEST_KS,
        vp1.PSI AS LATEST_PSI,
        vp1.ACCURACY AS LATEST_ACCURACY,
        vp1.OVERALL_RATING AS LATEST_RATING,
        vp2.VALIDATION_DATE AS PREVIOUS_DATE,
        vp2.GINI AS PREVIOUS_GINI,
        vp2.KS_STATISTIC AS PREVIOUS_KS,
        vp2.PSI AS PREVIOUS_PSI,
        vp2.ACCURACY AS PREVIOUS_ACCURACY,
        vp2.OVERALL_RATING AS PREVIOUS_RATING,
        CASE
            WHEN vp1.GINI < vp2.GINI * 0.9 THEN 1 -- 10% degradation in GINI
            WHEN vp1.KS_STATISTIC < vp2.KS_STATISTIC * 0.9 THEN 1 -- 10% degradation in KS
            WHEN vp1.PSI > vp2.PSI * 1.5 AND vp1.PSI > 0.1 THEN 1 -- 50% increase in PSI and above threshold
            WHEN vp1.ACCURACY < vp2.ACCURACY * 0.95 THEN 1 -- 5% degradation in accuracy
            ELSE 0
        END AS IS_DEGRADED
    FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
    JOIN MODEL_REGISTRY.dbo.MODEL_TYPE mt ON mr.TYPE_ID = mt.TYPE_ID
    JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp1 ON mr.MODEL_ID = vp1.MODEL_ID
    JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp2 ON mr.MODEL_ID = vp2.MODEL_ID
    WHERE mr.IS_ACTIVE = 1
    AND GETDATE() BETWEEN mr.EFF_DATE AND mr.EXP_DATE
    AND vp1.VALIDATION_DATE > vp2.VALIDATION_DATE
    AND vp1.VALIDATION_DATE = (
        SELECT MAX(VALIDATION_DATE)
        FROM MODEL_REGISTRY.dbo.MODEL_VALIDATION_RESULTS
        WHERE MODEL_ID = mr.MODEL_ID
    )
    AND vp2.VALIDATION_DATE = (
        SELECT MAX(VALIDATION_DATE)
        FROM MODEL_REGISTRY.dbo.MODEL_VALIDATION_RESULTS
        WHERE MODEL_ID = mr.MODEL_ID
        AND VALIDATION_DATE < vp1.VALIDATION_DATE
    )
)
SELECT 
    MODEL_ID,
    MODEL_NAME AS TEN_MO_HINH,
    MODEL_VERSION AS PHIEN_BAN,
    TYPE_NAME AS LOAI_MO_HINH,
    CONVERT(VARCHAR, LATEST_DATE, 103) AS NGAY_DANH_GIA_HIEN_TAI,
    CONVERT(VARCHAR, PREVIOUS_DATE, 103) AS NGAY_DANH_GIA_TRUOC,
    LATEST_GINI AS GINI_HIEN_TAI,
    PREVIOUS_GINI AS GINI_TRUOC,
    CAST((LATEST_GINI - PREVIOUS_GINI) / NULLIF(PREVIOUS_GINI, 0) * 100 AS DECIMAL(10,2)) AS THAY_DOI_GINI_PHANTRAM,
    LATEST_KS AS KS_HIEN_TAI,
    PREVIOUS_KS AS KS_TRUOC,
    CAST((LATEST_KS - PREVIOUS_KS) / NULLIF(PREVIOUS_KS, 0) * 100 AS DECIMAL(10,2)) AS THAY_DOI_KS_PHANTRAM,
    LATEST_PSI AS PSI_HIEN_TAI,
    PREVIOUS_PSI AS PSI_TRUOC,
    LATEST_RATING AS DANH_GIA_HIEN_TAI,
    PREVIOUS_RATING AS DANH_GIA_TRUOC
FROM PerfComparison
WHERE IS_DEGRADED = 1
ORDER BY 
    CASE LATEST_RATING
        WHEN 'RED' THEN 1
        WHEN 'AMBER' THEN 2
        WHEN 'GREEN' THEN 3
        ELSE 4
    END,
    THAY_DOI_GINI_PHANTRAM;

-- 3. Xu hướng hiệu suất theo thời gian
SELECT 
    'XU HƯỚNG HIỆU SUẤT THEO THỜI GIAN' AS SECTION_TITLE;

-- 3.1. Xu hướng hiệu suất của từng mô hình (các mô hình có ít nhất 3 lần đánh giá)
WITH ModelTrend AS (
    SELECT 
        mr.MODEL_ID,
        mr.MODEL_NAME,
        mr.MODEL_VERSION,
        mt.TYPE_NAME,
        COUNT(DISTINCT vp.VALIDATION_DATE) AS VALIDATION_COUNT,
        MIN(vp.VALIDATION_DATE) AS FIRST_VALIDATION,
        MAX(vp.VALIDATION_DATE) AS LAST_VALIDATION,
        AVG(vp.GINI) AS AVG_GINI,
        MIN(vp.GINI) AS MIN_GINI,
        MAX(vp.GINI) AS MAX_GINI,
        FIRST_VALUE(vp.GINI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE) AS FIRST_GINI,
        FIRST_VALUE(vp.GINI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) AS LATEST_GINI,
        CASE 
            WHEN FIRST_VALUE(vp.GINI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) > 
                 FIRST_VALUE(vp.GINI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE) THEN 'IMPROVING'
            WHEN FIRST_VALUE(vp.GINI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) < 
                 FIRST_VALUE(vp.GINI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE) THEN 'DEGRADING'
            ELSE 'STABLE'
        END AS GINI_TREND,
        AVG(vp.KS_STATISTIC) AS AVG_KS,
        FIRST_VALUE(vp.KS_STATISTIC) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE) AS FIRST_KS,
        FIRST_VALUE(vp.KS_STATISTIC) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) AS LATEST_KS,
        CASE 
            WHEN FIRST_VALUE(vp.KS_STATISTIC) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) > 
                 FIRST_VALUE(vp.KS_STATISTIC) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE) THEN 'IMPROVING'
            WHEN FIRST_VALUE(vp.KS_STATISTIC) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) < 
                 FIRST_VALUE(vp.KS_STATISTIC) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE) THEN 'DEGRADING'
            ELSE 'STABLE'
        END AS KS_TREND,
        AVG(vp.PSI) AS AVG_PSI,
        FIRST_VALUE(vp.PSI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE) AS FIRST_PSI,
        FIRST_VALUE(vp.PSI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) AS LATEST_PSI,
        CASE 
            WHEN FIRST_VALUE(vp.PSI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) < 
                 FIRST_VALUE(vp.PSI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE) THEN 'IMPROVING'
            WHEN FIRST_VALUE(vp.PSI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) > 
                 FIRST_VALUE(vp.PSI) OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE) THEN 'DEGRADING'
            ELSE 'STABLE'
        END AS PSI_TREND,
        CASE 
            WHEN COUNT(DISTINCT CASE WHEN vp.OVERALL_RATING = 'RED' THEN vp.VALIDATION_DATE END) > 0 THEN 'Attention Required'
            WHEN COUNT(DISTINCT CASE WHEN vp.OVERALL_RATING = 'AMBER' THEN vp.VALIDATION_DATE END) > 0 THEN 'Monitor'
            ELSE 'Stable'
        END AS OVERALL_STATUS
    FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
    JOIN MODEL_REGISTRY.dbo.MODEL_TYPE mt ON mr.TYPE_ID = mt.TYPE_ID
    JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp ON mr.MODEL_ID = vp.MODEL_ID
    WHERE mr.IS_ACTIVE = 1
    AND GETDATE() BETWEEN mr.EFF_DATE AND mr.EXP_DATE
    GROUP BY mr.MODEL_ID, mr.MODEL_NAME, mr.MODEL_VERSION, mt.TYPE_NAME
    HAVING COUNT(DISTINCT vp.VALIDATION_DATE) >= 3
)
SELECT 
    MODEL_ID,
    MODEL_NAME AS TEN_MO_HINH,
    MODEL_VERSION AS PHIEN_BAN,
    TYPE_NAME AS LOAI_MO_HINH,
    VALIDATION_COUNT AS SO_LAN_DANH_GIA,
    CONVERT(VARCHAR, FIRST_VALIDATION, 103) AS NGAY_DANH_GIA_DAU,
    CONVERT(VARCHAR, LAST_VALIDATION, 103) AS NGAY_DANH_GIA_CUOI,
    CAST(FIRST_GINI AS DECIMAL(10,4)) AS GINI_DAU,
    CAST(LATEST_GINI AS DECIMAL(10,4)) AS GINI_CUOI,
    CAST(LATEST_GINI - FIRST_GINI AS DECIMAL(10,4)) AS THAY_DOI_GINI,
    GINI_TREND AS XU_HUONG_GINI,
    CAST(FIRST_KS AS DECIMAL(10,4)) AS KS_DAU,
    CAST(LATEST_KS AS DECIMAL(10,4)) AS KS_CUOI,
    CAST(LATEST_KS - FIRST_KS AS DECIMAL(10,4)) AS THAY_DOI_KS,
    KS_TREND AS XU_HUONG_KS,
    CAST(FIRST_PSI AS DECIMAL(10,4)) AS PSI_DAU,
    CAST(LATEST_PSI AS DECIMAL(10,4)) AS PSI_CUOI,
    CAST(LATEST_PSI - FIRST_PSI AS DECIMAL(10,4)) AS THAY_DOI_PSI,
    PSI_TREND AS XU_HUONG_PSI,
    OVERALL_STATUS AS TRANG_THAI_TONG_THE
FROM ModelTrend
ORDER BY 
    CASE OVERALL_STATUS
        WHEN 'Attention Required' THEN 1
        WHEN 'Monitor' THEN 2
        ELSE 3
    END,
    VALIDATION_COUNT DESC;

-- 4. Phân tích hiệu suất theo phân khúc thời gian
SELECT 
    'PHÂN TÍCH HIỆU SUẤT THEO PHÂN KHÚC THỜI GIAN' AS SECTION_TITLE;

-- 4.1. Hiệu suất theo quý trong năm hiện tại
WITH QuarterlyPerformance AS (
    SELECT 
        mr.MODEL_ID,
        mr.MODEL_NAME,
        mr.MODEL_VERSION,
        mt.TYPE_NAME,
        DATEPART(QUARTER, vp.VALIDATION_DATE) AS QUARTER,
        COUNT(DISTINCT vp.VALIDATION_ID) AS VALIDATION_COUNT,
        AVG(vp.GINI) AS AVG_GINI,
        AVG(vp.KS_STATISTIC) AS AVG_KS,
        AVG(vp.PSI) AS AVG_PSI,
        COUNT(DISTINCT CASE WHEN vp.OVERALL_RATING = 'RED' THEN vp.VALIDATION_ID END) AS RED_COUNT,
        COUNT(DISTINCT CASE WHEN vp.OVERALL_RATING = 'AMBER' THEN vp.VALIDATION_ID END) AS AMBER_COUNT,
        COUNT(DISTINCT CASE WHEN vp.OVERALL_RATING = 'GREEN' THEN vp.VALIDATION_ID END) AS GREEN_COUNT
    FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
    JOIN MODEL_REGISTRY.dbo.MODEL_TYPE mt ON mr.TYPE_ID = mt.TYPE_ID
    JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp ON mr.MODEL_ID = vp.MODEL_ID
    WHERE mr.IS_ACTIVE = 1
    AND GETDATE() BETWEEN mr.EFF_DATE AND mr.EXP_DATE
    AND DATEPART(YEAR, vp.VALIDATION_DATE) = DATEPART(YEAR, GETDATE())
    GROUP BY mr.MODEL_ID, mr.MODEL_NAME, mr.MODEL_VERSION, mt.TYPE_NAME, DATEPART(QUARTER, vp.VALIDATION_DATE)
)
SELECT 
    MODEL_ID,
    MODEL_NAME AS TEN_MO_HINH,
    MODEL_VERSION AS PHIEN_BAN,
    TYPE_NAME AS LOAI_MO_HINH,
    'Q' + CAST(QUARTER AS VARCHAR) AS QUY,
    VALIDATION_COUNT AS SO_LAN_DANH_GIA,
    CAST(AVG_GINI AS DECIMAL(10,4)) AS GINI_TRUNG_BINH,
    CAST(AVG_KS AS DECIMAL(10,4)) AS KS_TRUNG_BINH,
    CAST(AVG_PSI AS DECIMAL(10,4)) AS PSI_TRUNG_BINH,
    CASE
        WHEN RED_COUNT > 0 THEN 'RED'
        WHEN AMBER_COUNT > 0 THEN 'AMBER'
        WHEN GREEN_COUNT > 0 THEN 'GREEN'
        ELSE 'N/A'
    END AS DANH_GIA_TONG_THE
FROM QuarterlyPerformance
ORDER BY MODEL_NAME, MODEL_VERSION, QUARTER;

-- 5. Báo cáo tóm tắt đề xuất hành động
SELECT 
    'ĐỀ XUẤT HÀNH ĐỘNG' AS SECTION_TITLE;

-- 5.1. Mô hình cần rà soát
WITH ProblemModels AS (
    SELECT 
        mr.MODEL_ID,
        mr.MODEL_NAME,
        mr.MODEL_VERSION,
        mt.TYPE_NAME,
        vp.VALIDATION_DATE,
        vp.OVERALL_RATING,
        vp.GINI,
        vp.KS_STATISTIC,
        vp.PSI,
        ROW_NUMBER() OVER (PARTITION BY mr.MODEL_ID ORDER BY vp.VALIDATION_DATE DESC) AS RowNum
    FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
    JOIN MODEL_REGISTRY.dbo.MODEL_TYPE mt ON mr.TYPE_ID = mt.TYPE_ID
    JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp ON mr.MODEL_ID = vp.MODEL_ID
    WHERE mr.IS_ACTIVE = 1
    AND GETDATE() BETWEEN mr.EFF_DATE AND mr.EXP_DATE
)
SELECT 
    MODEL_ID,
    MODEL_NAME AS TEN_MO_HINH,
    MODEL_VERSION AS PHIEN_BAN,
    TYPE_NAME AS LOAI_MO_HINH,
    CONVERT(VARCHAR, VALIDATION_DATE, 103) AS NGAY_DANH_GIA,
    CASE
        WHEN OVERALL_RATING = 'RED' THEN 'Cân nhắc tái xây dựng mô hình'
        WHEN OVERALL_RATING = 'AMBER' AND DATEDIFF(DAY, VALIDATION_DATE, GETDATE()) > 90 THEN 'Cần đánh giá lại mô hình'
        WHEN OVERALL_RATING = 'AMBER' THEN 'Theo dõi chặt chẽ hiệu suất'
        WHEN DATEDIFF(DAY, VALIDATION_DATE, GETDATE()) > 180 THEN 'Cần đánh giá lại mô hình do lâu chưa đánh giá'
        ELSE 'Không có hành động cần thiết'
    END AS DE_XUAT_HANH_DONG,
    OVERALL_RATING AS DANH_GIA,
    DATEDIFF(DAY, VALIDATION_DATE, GETDATE()) AS SO_NGAY_TU_DANH_GIA_CUOI
FROM ProblemModels
WHERE RowNum = 1
AND (
    OVERALL_RATING IN ('RED', 'AMBER')
    OR DATEDIFF(DAY, VALIDATION_DATE, GETDATE()) > 180
)
ORDER BY 
    CASE
        WHEN OVERALL_RATING = 'RED' THEN 1
        WHEN OVERALL_RATING = 'AMBER' AND DATEDIFF(DAY, VALIDATION_DATE, GETDATE()) > 90 THEN 2
        WHEN OVERALL_RATING = 'AMBER' THEN 3
        WHEN DATEDIFF(DAY, VALIDATION_DATE, GETDATE()) > 180 THEN 4
        ELSE 5
    END;

-- 5.2. Lịch đánh giá mô hình tiếp theo
WITH NextValidation AS (
    SELECT 
        mr.MODEL_ID,
        mr.MODEL_NAME,
        mr.MODEL_VERSION,
        mt.TYPE_NAME,
        mr.MODEL_CATEGORY,
        MAX(vp.VALIDATION_DATE) AS LAST_VALIDATION_DATE,
        CASE
            WHEN MAX(vp.OVERALL_RATING) = 'RED' THEN DATEADD(MONTH, 1, MAX(vp.VALIDATION_DATE))
            WHEN MAX(vp.OVERALL_RATING) = 'AMBER' THEN DATEADD(MONTH, 3, MAX(vp.VALIDATION_DATE))
            ELSE DATEADD(MONTH, 6, MAX(vp.VALIDATION_DATE))
        END AS NEXT_VALIDATION_DATE
    FROM MODEL_REGISTRY.dbo.MODEL_REGISTRY mr
    JOIN MODEL_REGISTRY.dbo.MODEL_TYPE mt ON mr.TYPE_ID = mt.TYPE_ID
    JOIN MODEL_REGISTRY.dbo.VW_MODEL_PERFORMANCE vp ON mr.MODEL_ID = vp.MODEL_ID
    WHERE mr.IS_ACTIVE = 1
    AND GETDATE() BETWEEN mr.EFF_DATE AND mr.EXP_DATE
    GROUP BY mr.MODEL_ID, mr.MODEL_NAME, mr.MODEL_VERSION, mt.TYPE_NAME, mr.MODEL_CATEGORY
)
SELECT 
    MODEL_ID,
    MODEL_NAME AS TEN_MO_HINH,
    MODEL_VERSION AS PHIEN_BAN,
    TYPE_NAME AS LOAI_MO_HINH,
    MODEL_CATEGORY AS PHAN_KHUC,
    CONVERT(VARCHAR, LAST_VALIDATION_DATE, 103) AS NGAY_DANH_GIA_CUOI,
    CONVERT(VARCHAR, NEXT_VALIDATION_DATE, 103) AS NGAY_DANH_GIA_KE_TIEP,
    CASE
        WHEN NEXT_VALIDATION_DATE < GETDATE() THEN 'Trễ hạn'
        WHEN NEXT_VALIDATION_DATE BETWEEN GETDATE() AND DATEADD(DAY, 30, GETDATE()) THEN 'Trong 30 ngày tới'
        WHEN NEXT_VALIDATION_DATE BETWEEN DATEADD(DAY, 31, GETDATE()) AND DATEADD(DAY, 90, GETDATE()) THEN 'Trong quý tới'
        ELSE 'Dài hạn'
    END AS TRANG_THAI_DANH_GIA,
    DATEDIFF(DAY, GETDATE(), NEXT_VALIDATION_DATE) AS SO_NGAY_CON_LAI
FROM NextValidation
WHERE NEXT_VALIDATION_DATE <= DATEADD(MONTH, 6, GETDATE())
ORDER BY NEXT_VALIDATION_DATE;